---

- name: Log the OS name, version and release
  debug: msg="Host {{ inventory_hostname }} is running {{ ansible_distribution }} {{ ansible_distribution_version }} ({{ ansible_distribution_release }})"

# loading major version specific vars
- name: Including major version specific variables.
  include_vars: "{{ item }}"
  with_first_found:
    - "{{ ansible_distribution | lower }}_{{ ansible_distribution_major_version }}.yml"
    - empty.yml
  tags:
    - vars
    # We need these vars for the entitlements tag to work
    - entitlements
    - container-mirror

# configure things specific to yum systems
- import_tasks: yum_systems.yml
  when: ansible_os_family == "RedHat"

# configure things specific to apt systems
- import_tasks: apt_systems.yml
  when: ansible_pkg_mgr == "apt"

- import_tasks: zypper_systems.yml
  when: ansible_pkg_mgr == "zypper"

- name: Set the hardware clock
  command: hwclock --systohc
  tags:
    - timezone

# configure Kerberos
- import_tasks: kerberos.yml
  tags:
    - kerberos

# upload custom disk monitoring scripts
- import_tasks: disk_monitoring.yml
  tags:
    - monitoring-scripts
    - nagios

# configure nagios (Except OpenSUSE and RHEL8)
- import_tasks: nagios.yml
  when: ansible_pkg_mgr != "zypper"
  tags:
    - nagios

- name: Get SELinux status
  command: getenforce
  register: selinux_status
  when: ansible_os_family == "RedHat"
  tags:
    - nagios

# configure selinux for nagios
- import_tasks: nrpe-selinux.yml
  when: ansible_os_family == "RedHat" and
        (selinux_status is defined and selinux_status.stdout != "Disabled")
  tags:
    - nagios

# We check for podman first because it was released after docker.
# If we find podman, we should use its certs path.
# Just because `docker` exists doesn't mean we're not using podman.
- name: Check for podman
  command: podman --version
  register: check_for_podman
  ignore_errors: true
  when:
    - container_mirror_cert_path is not defined
    - container_mirror is defined
    - container_mirror_cert is defined
  tags:
    - container-mirror

- set_fact:
    container_mirror_cert_path: "/etc/containers/certs.d/{{ container_mirror }}"
  when:
    - check_for_podman is success
    - container_mirror is defined
    - container_mirror_cert is defined
  tags:
    - container-mirror

- name: Check for docker
  command: docker --version
  register: check_for_docker
  ignore_errors: true
  when:
    - container_mirror_cert_path is not defined
    - check_for_podman is not success
    - container_mirror is defined
    - container_mirror_cert is defined
  tags:
    - container-mirror

- set_fact:
    container_mirror_cert_path: "/etc/docker/certs.d/{{ container_mirror }}"
  when:
    - check_for_docker is success
    - check_for_podman is not success
    - container_mirror is defined
    - container_mirror_cert is defined
  tags:
    - container-mirror

- import_tasks: container_mirror.yml
  when:
    - container_mirror is defined
    - container_mirror_cert is defined
    - container_mirror_cert_path is defined
  tags:
    - container-mirror
